{
  "city_population": {
    "keywords": [
      "inhabitants",
      "people",
      "live",
      "citizens",
      "much",
      "population"
    ],
    "query_type": "forward",
    "predicates": ["http://dbpedia.org/ontology/populationTotal"],
    "answer_templates": [
    "The population in requested place is {result} people.",
    "The population in {original} is {result} people.",
    "{result} people.",
    "It is {result} people.",
    "{result} people live in {original}."
    ]
    },
  "distance": {
    "keywords": [
      "calculate",
      "distance",
      "between"
    ],
    "query_type": "distance",
    "answer_templates": [
    "The distance between these places is {result} km.",
    "The distance between {original} is {result} km.",
    "The distance is {result} km.",
    "It's {result} km.",
    "{result} kilometers."
    ]
    },
  "forward_genre": {
    "keywords": [
      "music",
      "genre",
      "album",
      "song"
    ],
    "query_type": "forward",
    "predicates": ["http://dbpedia.org/ontology/genre",
      "http://dbpedia.org/property/genre"],
    "answer_templates": [
    "{result}.",
    "{original} plays {result}."
    ]
    },
  "backward_genre": {
    "keywords": [
      "music",
      "genre",
      "album",
      "song"
    ],
    "query_type": "backward",
    "predicates": ["http://dbpedia.org/ontology/genre",
      "http://dbpedia.org/property/genre"],
    "answer_templates": [
    "Would you like to listen for {result}.",
    "OK. I think you might enjoy starting with {result}.",
    "Tuning in your personal radio station. First up, {result}.",
    "What about {result}? Playing now.",
    "OK, let's press play. Starting with {result}."
    ]
    },
    "boolean_genre": {
      "keywords": [
        "music",
        "genre",
        "album",
        "song"
      ],
      "query_type": "boolean",
      "predicates": ["http://dbpedia.org/ontology/genre",
        "http://dbpedia.org/property/genre"],
      "answer_templates": [
      "Would you like to listen for {result}.",
      "OK. I think you might enjoy starting with {result}.",
      "Tuning in your personal radio station. First up, {result}.",
      "What about {result}? Playing now.",
      "OK, let's press play. Starting with {result}."
      ]
    },
  "forward_timeZone": {
    "keywords": [
      "timezone",
      "time zone"
    ],
    "query_type": "forward",
    "predicates": ["http://dbpedia.org/property/timezone",
      "http://dbpedia.org/ontology/timeZone"],
    "answer_templates": [
    "The timezone is {result}",
    "The timezone of this location is {result}",
    "It is {result}",
    "{result}"
    ]
    },
  "backward_timeZone": {
      "keywords": [
        "timezone",
        "time zone"
      ],
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/property/timezone",
        "http://dbpedia.org/ontology/timeZone"],
      "answer_templates": [
      "The timezone is {result}",
      "The timezone of this location is {result}",
      "It is {result}",
      "{result}"
      ]
    },
  "boolean_timeZone": {
      "keywords": [
        "timezone",
        "time zone"
      ],
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/property/timezone",
        "http://dbpedia.org/ontology/timeZone"],
      "answer_templates": [
      "The timezone is {result}",
      "The timezone of this location is {result}",
      "It is {result}",
      "{result}"
      ]
    },
  "backward_birthPlace": {
    "keywords": [
      "city",
      "country",
      "born",
      "birth",
      "where"
    ],
    "query_type": "backward",
    "answer_templates": [
    "This person is {result}.",
    "{result} birth place is {original}"
    ],
    "predicates": ["http://dbpedia.org/property/birthPlace",
      "http://dbpedia.org/ontology/birthPlace"]
  },
  "forward_birthPlace": {
    "keywords": [
      "city",
      "country",
      "born",
      "birth",
      "where"
    ],
    "query_type": "forward",
    "answer_templates": [
    "{result}.",
    "{original} birth place is {result}"
    ],
    "predicates": ["http://dbpedia.org/property/birthPlace",
      "http://dbpedia.org/ontology/birthPlace"]
  },
  "boolean_birthPlace": {
    "keywords": [
      "city",
      "country",
      "born",
      "birth",
      "where"
    ],
    "query_type": "boolean",
    "answer_templates": [
    "{result}.",
    "{original} birth place is {result}"
    ],
    "predicates": ["http://dbpedia.org/property/birthPlace",
      "http://dbpedia.org/ontology/birthPlace"]
  },
  "backward_locatedIn": {
  "keywords": [
    "where",
    "located",
    "location",
    "happen",
    "happened"
  ],
  "query_type": "backward",
  "predicates": ["http://dbpedia.org/ontology/location",
    "http://dbpedia.org/property/mapCaption",
    "http://dbpedia.org/ontology/mapCaption",
    "http://dbpedia.org/property/location",
    "http://dbpedia.org/ontology/city",
    "http://dbpedia.org/property/city",
    "http://dbpedia.org/ontology/isPartOf",
    "http://dbpedia.org/property/isPartOf",
    "http://dbpedia.org/ontology/place",
    "http://dbpedia.org/property/place",
    "http://dbpedia.org/ontology/locatedInArea",
    "http://dbpedia.org/property/locatedInArea"],
  "answer_templates": [
    "{result}."
    ]
  },
  "forward_locatedIn": {
  "keywords": [
    "where",
    "located",
    "location",
    "happen",
    "happened"
  ],
  "query_type": "forward",
  "predicates": ["http://dbpedia.org/ontology/location",
    "http://dbpedia.org/property/mapCaption",
    "http://dbpedia.org/ontology/mapCaption",
    "http://dbpedia.org/property/location",
    "http://dbpedia.org/ontology/city",
    "http://dbpedia.org/property/city",
    "http://dbpedia.org/ontology/isPartOf",
    "http://dbpedia.org/property/isPartOf",
    "http://dbpedia.org/ontology/place",
    "http://dbpedia.org/property/place",
    "http://dbpedia.org/ontology/locatedInArea",
    "http://dbpedia.org/property/locatedInArea"],
  "answer_templates": [
    "That's located in {result}.",
    "The {original} is located in {result}.",
    "That's going to be in {result}."
    ]
  },
  "boolean_locatedIn": {
    "keywords": [
      "where",
      "located",
      "location",
      "happen",
      "happened"
    ],
    "query_type": "boolean",
    "predicates": ["http://dbpedia.org/ontology/location",
      "http://dbpedia.org/property/mapCaption",
      "http://dbpedia.org/ontology/mapCaption",
      "http://dbpedia.org/property/location",
      "http://dbpedia.org/ontology/city",
      "http://dbpedia.org/property/city",
      "http://dbpedia.org/ontology/isPartOf",
      "http://dbpedia.org/property/isPartOf",
      "http://dbpedia.org/ontology/place",
      "http://dbpedia.org/property/place",
      "http://dbpedia.org/ontology/locatedInArea",
      "http://dbpedia.org/property/locatedInArea"],
    "answer_templates": [
      "That's located in {result}.",
      "The {original} is located in {result}.",
      "That's going to be in {result}."
      ]
    },
  "forward_position": {
    "keywords": [
      "position",
      "position of"
    ],
    "query_type": "forward",
    "predicates": ["http://dbpedia.org/ontology/position",
      "http://dbpedia.org/property/position",
      "http://dbpedia.org/property/careerPosition",
      "http://dbpedia.org/ontology/careerPosition"],
    "answer_templates": [
    "The position of {original} is {result}."
    ]
    },
  "backward_position": {
    "keywords": [
      "position",
      "position of"
    ],
    "query_type": "backward",
    "predicates": ["http://dbpedia.org/ontology/position",
      "http://dbpedia.org/property/position",
      "http://dbpedia.org/property/careerPosition",
      "http://dbpedia.org/ontology/careerPosition"],
    "answer_templates": [
    "The position of {original} is {result}."
    ]
    },
  "boolean_position": {
      "keywords": [
        "position",
        "position of"
      ],
      "query_type": "boolean",
      "predicates": ["http://dbpedia.org/ontology/position",
        "http://dbpedia.org/property/position",
        "http://dbpedia.org/property/careerPosition",
        "http://dbpedia.org/ontology/careerPosition"],
      "answer_templates": [
      "The position of {original} is {result}."
      ]
  },
  "forward_deathPlace": {
    "keywords": [
      "died in",
      "death place",
      "died at",
      "place of death",
      "place death"
    ],
    "query_type": "forward",
    "predicates": ["http://dbpedia.org/ontology/deathPlace",
      "http://dbpedia.org/property/deathPlace"],
    "answer_templates": [
    "{original} has died in {result}.",
    "This person died in {result}."
    ]
  },
  "backward_deathPlace": {
    "keywords": [
      "died in",
      "death place",
      "died at",
      "place of death",
      "place death"
    ],
    "query_type": "backward",
    "predicates": ["http://dbpedia.org/ontology/deathPlace",
      "http://dbpedia.org/property/deathPlace"],
    "answer_templates": [
    "{original} has died in {result}.",
    "This person died in {result}."
    ]
  },
  "boolean_deathPlace": {
    "keywords": [
      "died in",
      "death place",
      "died at",
      "place of death",
      "place death"
    ],
    "query_type": "boolean",
    "predicates": ["http://dbpedia.org/ontology/deathPlace",
      "http://dbpedia.org/property/deathPlace"],
    "answer_templates": [
    "{original} has died in {result}.",
    "This person died in {result}."
    ]
  },
  "backward_artist": {
    "keywords": [
      "artist",
      "performer",
      "lead artist"
    ],
    "query_type": "backward",
    "predicates": ["http://dbpedia.org/ontology/artist",
      "http://dbpedia.org/property/artist"],
    "answer_templates": [
    "{original} created the {result}."
    ]
    },
  "forward_artist": {
    "keywords": [
      "artist",
      "performer",
      "lead artist"
    ],
    "query_type": "forward",
    "predicates": ["http://dbpedia.org/ontology/artist",
      "http://dbpedia.org/property/artist"],
    "answer_templates": [
    "{original} is the lead artist in {result}."
    ]
    },
  "boolean_artist": {
    "keywords": [
      "artist",
      "performer",
      "lead artist"
    ],
    "query_type": "boolean",
    "predicates": ["http://dbpedia.org/ontology/artist",
      "http://dbpedia.org/property/artist"],
    "answer_templates": [
    "{original} is the lead artist in {result}."
    ]
    },
  "forward_country": {
    "keywords": [
      "located",
      "country",
      "situated in",
      "situated"
    ],
    "query_type": "forward",
    "predicates": ["http://dbpedia.org/ontology/country",
      "http://dbpedia.org/property/country"],
    "answer_templates": [
    "In {result}"
    ]
    },
  "backward_country": {
    "keywords": [
      "located",
      "country",
      "situated in",
      "situated"
    ],
    "query_type": "backward",
    "predicates": ["http://dbpedia.org/ontology/country",
      "http://dbpedia.org/property/country"],
    "answer_templates": [
    "{result} is in this country.",
    "{result} located in {original}"
    ]
    },
  "boolean_country": {
      "keywords": [
        "located",
        "country",
        "situated in",
        "situated"
      ],
      "query_type": "boolean",
      "predicates": ["http://dbpedia.org/ontology/country",
        "http://dbpedia.org/property/country"],
      "answer_templates": [
      "{result} is in this country.",
      "{result} located in {original}"
      ]
      },
  "forward_recordLabel": {
    "keywords": [
      "label",
      "record",
      "signed",
      "artist",
      "music",
      "artists",
      "band"
      ],
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/recordLabel",
        "http://dbpedia.org/property/recordLabel"],
      "answer_templates": [
      "The record label is called {result}.",
      "The label is {result}."
      ]
      },
  "backward_recordLabel": {
      "keywords": [
        "label",
        "record",
        "signed",
        "artist",
        "music",
        "artists",
        "band"
        ],
        "query_type": "backward",
        "predicates": ["http://dbpedia.org/ontology/recordLabel",
          "http://dbpedia.org/property/recordLabel"],
        "answer_templates": [
        "The record label is called {result}.",
        "The label is {result}."
        ]
    },
  "boolean_recordLabel": {
      "keywords": [
        "label",
        "record",
        "signed",
        "artist",
        "music",
        "artists",
        "band"
        ],
        "query_type": "boolean",
        "predicates": ["http://dbpedia.org/ontology/recordLabel",
          "http://dbpedia.org/property/recordLabel"],
        "answer_templates": [
        "The record label is called {result}.",
        "The label is {result}."
        ]
    },
  "forward_literaryGenre": {
    "keywords": [
      "genre",
      "book",
      "novel"
      ],
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/literaryGenre",
        "http://dbpedia.org/property/literaryGenre"],
      "answer_templates": [
      "The genre of this book is {result}."
      ]
      },
  "backward_literaryGenre": {
    "keywords": [
      "genre",
      "book",
      "novel"
      ],
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/literaryGenre",
        "http://dbpedia.org/property/literaryGenre"],
      "answer_templates": [
      "Try to read {result}."
      ]
    },
  "boolean_literaryGenre": {
      "keywords": [
        "genre",
        "book",
        "novel"
        ],
        "query_type": "boolean",
        "predicates": ["http://dbpedia.org/ontology/literaryGenre",
          "http://dbpedia.org/property/literaryGenre"],
        "answer_templates": [
        "Try to read {result}."
        ]
    },
  "backward_type": {
    "keywords": [
      "type",
      "kind",
      "structure"
      ],
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/type",
        "http://dbpedia.org/property/type"],
      "answer_templates": [
      "The {result}."
      ]
      },
  "forward_type": {
    "keywords": [
      "type",
      "kind",
      "structure"
      ],
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/type",
        "http://dbpedia.org/property/type"],
      "answer_templates": [
      "The type is {result}."
      ]
  },
  "boolean_type": {
    "keywords": [
      "type",
      "kind",
      "structure"
      ],
      "query_type": "boolean",
      "predicates": ["http://dbpedia.org/ontology/type",
        "http://dbpedia.org/property/type"],
      "answer_templates": [
      "The type is {result}."
      ]
  },
  "backward_director": {
    "keywords": [
      "director",
      "direct",
      "film",
      "directed",
      "movie",
      "TV-show",
      "TV",
      "films",
      "movies"
      ],
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/director",
        "http://dbpedia.org/ontology/cinematography", 
        "http://dbpedia.org/property/director",
        "http://dbpedia.org/property/cinematography"],
      "answer_templates": [
      "{original} is the director of {result}.",
      "The {result} is the example."
      ]
      },
  "forward_director": {
    "keywords": [
      "director",
      "direct",
      "film",
      "directed",
      "movie",
      "TV-show",
      "TV",
      "films",
      "movies"
      ],
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/director",
        "http://dbpedia.org/ontology/cinematography", 
        "http://dbpedia.org/property/director",
        "http://dbpedia.org/property/cinematography"],
      "answer_templates": [
      "The director is {result}.",
      "The director's name is {result}."
      ]
    },
  "boolean_director": {
    "keywords": [
      "director",
      "direct",
      "film",
      "directed",
      "movie",
      "TV-show",
      "TV",
      "films",
      "movies"
      ],
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/director",
        "http://dbpedia.org/ontology/cinematography", 
        "http://dbpedia.org/property/director",
        "http://dbpedia.org/property/cinematography"],
      "answer_templates": [
      "The director is {result}.",
      "The director's name is {result}."
      ]
    },
  "forward_hometown": {
    "keywords": [
      "hometown",
      "born in the city",
      "born in",
      "grow up"
      ],
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/hometown",
        "http://dbpedia.org/property/hometown"],
      "answer_templates": [
      "The hometown of this person is {result}.",
      "The hometown of {original} is called {result}."
      ]
   },
  "backward_hometown": {
    "keywords": [
      "hometown",
      "born in the city",
      "born in",
      "grow up"
      ],
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/hometown",
        "http://dbpedia.org/property/hometown"],
      "answer_templates": [
      "The hometown of {result} is {original}.",
      "The hometown of {original} is called {result}."
      ]
   },
  "boolean_hometown": {
    "keywords": [
      "hometown",
      "born in the city",
      "born in",
      "grow up"
      ],
      "query_type": "boolean",
      "predicates": ["http://dbpedia.org/ontology/hometown",
        "http://dbpedia.org/property/hometown"],
      "answer_templates": [
      "The hometown of {result} is {original}.",
      "The hometown of {original} is called {result}."
      ]
   },
  "backward_author": {
    "keywords": [
      "author",
      "creator of",
      "writer",
      "writer of",
      "write"
      ],
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/author",
        "http://dbpedia.org/property/author",
        "http://dbpedia.org/ontology/composer",
        "http://dbpedia.org/property/composer",
        "http://dbpedia.org/ontology/writer",
        "http://dbpedia.org/property/writer"],
      "answer_templates": [
      "The author of {original} is {result}."
      ]
    },
  "boolean_author": {
    "keywords": [
      "author",
      "creator of",
      "writer",
      "writer of",
      "write"
      ],
      "query_type": "boolean",
      "predicates": ["http://dbpedia.org/ontology/author",
        "http://dbpedia.org/property/author",
        "http://dbpedia.org/ontology/composer",
        "http://dbpedia.org/property/composer",
        "http://dbpedia.org/ontology/writer",
        "http://dbpedia.org/property/writer"],
      "answer_templates": [
      "The author of {original} is {result}."
      ]
    },
  "forward_author": {
    "keywords": [
      "author",
      "creator of",
      "writer",
      "writer of",
      "write"
      ],
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/author",
        "http://dbpedia.org/property/author",
        "http://dbpedia.org/ontology/composer",
        "http://dbpedia.org/property/composer",
        "http://dbpedia.org/ontology/writer",
        "http://dbpedia.org/property/writer"],
      "answer_templates": [
      "The author of {original} is {result}."
      ]
    },
  "forward_language": {
    "keywords": [
    "language",
    "language of",
    "language spoken",
    "speak",
    "speak this",
    "speak this language",
    "written language",
    "language of this work"
    ],
    "query_type": "forward",
    "predicates": ["http://dbpedia.org/ontology/language",
      "http://dbpedia.org/property/language"],
    "answer_templates": [
    "The language of {original} is {result}.",
    "This is {result}.",
    "That's going to be {result}."
    ]
  },
  "backward_language": {
      "keywords": [
      "language",
      "language of",
      "language spoken",
      "speak",
      "speak this",
      "speak this language",
      "written language",
      "language of this work"
      ],
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/language",
        "http://dbpedia.org/property/language"],
      "answer_templates": [
      "The language of {original} is {result}."
      ]
  },
  "boolean_language": {
    "keywords": [
    "language",
    "language of",
    "language spoken",
    "speak",
    "speak this",
    "speak this language",
    "written language",
    "language of this work"
    ],
    "query_type": "boolean",
    "predicates": ["http://dbpedia.org/ontology/language",
      "http://dbpedia.org/property/language"],
    "answer_templates": [
    "The language of {original} is {result}."
    ]
  },
  "backward_producer": {
    "keywords": [
    "producer of",
    "produced the",
    "produced",
    "been producing"
    ],
    "query_type": "backward",
    "predicates": ["http://dbpedia.org/ontology/producer",
      "http://dbpedia.org/property/producer"],
    "answer_templates": [
    "It was {result} who produced this.",
    "The name of this producer is {result}."
    ]
  },
  "forward_producer": {
    "keywords": [
    "producer of",
    "produced the",
    "produced",
    "been producing"
    ],
    "query_type": "forward",
    "predicates": ["http://dbpedia.org/ontology/producer",
      "http://dbpedia.org/property/producer"],
    "answer_templates": [
    "{result} ",
    "The {original} has been produced by {result}."
    ]
  },
  "boolean_producer": {
    "keywords": [
    "producer of",
    "produced the",
    "produced",
    "been producing"
    ],
    "query_type": "forward",
    "predicates": ["http://dbpedia.org/ontology/producer",
      "http://dbpedia.org/property/producer"],
    "answer_templates": [
    "{result} ",
    "The {original} has been produced by {result}."
    ]
  },
  "forward_deathCause": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/deathCause",
        "http://dbpedia.org/property/deathCause"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_deathCause": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/deathCause",
        "http://dbpedia.org/property/deathCause"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_instrument": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/instrument",
        "http://dbpedia.org/property/instrument"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_instrument": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/instrument",
        "http://dbpedia.org/property/instrument"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_modes": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/modes",
        "http://dbpedia.org/property/modes"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_modes": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/modes",
        "http://dbpedia.org/property/modes"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_publisher": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/publisher",
        "http://dbpedia.org/property/publisher"],
      "answer_templates": [
      "{result} ",
      "The {original} was published by {result} "
      ]
    },
    "backward_publisher": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/publisher",
        "http://dbpedia.org/property/publisher"],
      "answer_templates": [
      "{result}",
      "The {result} was published by {original}"
      ]
    },
    "forward_battle": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/battle",
        "http://dbpedia.org/property/battle"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_battle": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/battle",
        "http://dbpedia.org/property/battle"],
      "answer_templates": [
      "{result}"
      ]
    },
    "forward_nationality": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/nationality",
        "http://dbpedia.org/property/nationality"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_nationality": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/nationality",
        "http://dbpedia.org/property/nationality"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_influencedBy": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/influencedBy",
        "http://dbpedia.org/property/influencedBy"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_influencedBy": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/influencedBy",
        "http://dbpedia.org/property/influencedBy"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_industry": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/industry",
        "http://dbpedia.org/property/industry"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_industry": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/industry",
        "http://dbpedia.org/property/industry"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_creator": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/creator", 
        "http://dbpedia.org/ontology/developer",
        "http://dbpedia.org/property/creator", 
        "http://dbpedia.org/property/developer"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_creator": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/creator", 
        "http://dbpedia.org/ontology/developer",
        "http://dbpedia.org/property/creator", 
        "http://dbpedia.org/property/developer"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_occupation": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/occupation",
        "http://dbpedia.org/property/occupation"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_occupation": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/occupation",
        "http://dbpedia.org/property/occupation"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_architecturalStyle": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/architecturalStyle",
        "http://dbpedia.org/property/architecturalStyle"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_architecturalStyle": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/architecturalStyle",
        "http://dbpedia.org/property/architecturalStyle"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_parent": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/parent",
        "http://dbpedia.org/property/parent"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_parent": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/parent",
        "http://dbpedia.org/property/parent"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_distributor": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/distributor",
        "http://dbpedia.org/property/distributor"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_distributor": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/distributor",
        "http://dbpedia.org/property/distributor"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_child": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/child",
        "http://dbpedia.org/property/child"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_child": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/child",
        "http://dbpedia.org/property/child"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_restingPlace": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/restingPlace",
        "http://dbpedia.org/property/restingPlace"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_restingPlace": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/restingPlace", "http://dbpedia.org/property/restingPlace"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_field": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/field", "http://dbpedia.org/property/field"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_field": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/field", "http://dbpedia.org/property/field"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_headquarter": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/headquarter", "http://dbpedia.org/property/headquarter"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_headquarter": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/headquarter", "http://dbpedia.org/property/headquarter"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_ideology": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/ideology", "http://dbpedia.org/property/ideology"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_ideology": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/ideology", "http://dbpedia.org/property/ideology"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_religion": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/religion", "http://dbpedia.org/property/religion"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_religion": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/religion", "http://dbpedia.org/property/religion"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_foundedBy": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/foundedBy", "http://dbpedia.org/property/foundedBy"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_foundedBy": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/foundedBy", "http://dbpedia.org/property/foundedBy"],
      "answer_templates": [
      "{result} "
      ]
    },
    "forward_series": {
      "query_type": "forward",
      "predicates": ["http://dbpedia.org/ontology/series", "http://dbpedia.org/property/series"],
      "answer_templates": [
      "{result} "
      ]
    },
    "backward_series": {
      "query_type": "backward",
      "predicates": ["http://dbpedia.org/ontology/series", "http://dbpedia.org/property/series"],
      "answer_templates": [
      "{result} "
      ]
    },
    "abstract": {
      "query_type": "abstract",
      "answer_templates": [
      "{result}."
      ],
      "predicates": ["http://dbpedia.org/ontology/abstract", "http://dbpedia.org/property/abstract"]
    }
}
